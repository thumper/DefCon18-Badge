This is the source tree for my submission to the [Defcon18 Badge
Hacking contest][1].

************************************************************************

Description
===========

My idea was to implement [web of trust][2] software for the badge,
playing up on the theme of semi-anonymity that we encounter at Defcon.
When badges are connected together, the user can indicate that they
are friends with the other badge holder so that their own badge
"memorizes" the remote badge.  If a user is just meeting a person for
the first time, they can connect the badges and ask "how many degrees
of separation are there between us?"

In practice, there are a few problems that arise:
1. how do you tell the badges apart?
2. the badge only has 2K of memory available, so it's not possible
   to actually memorize the badges you meet (and all the badges that
   each of those badges has met -- necessary for calculating the
   degrees of separation).
3. the badges cannot directly connect to each other via cable
   without some further hacking.

Telling the badges apart is relatively easy: scan through the stack
memory when the badge first starts up (and thus, before the memory has
been initialized), and use that as a seed to a random number
generator.  Then assign a 32-bit random integer to be the ID of the
badge.

To solve the memory problem, I resorted to using [bloom filters][3],
which are a variant of hashing your input to the size of a (small)
fixed length array.  What is great about them is that you can figure
out how long your array should be given the size of your input
population and the probability you are willing to accept for a
collision.

Connecting the badges together is definitely doable, as demonstrated
by last year's badge which used I2C for inter-badge communication.
I didn't realize this problem with my idea until Saturday night,
and I didn't think that there would be time for me to figure out the
I2C stuff unless I pulled an all-nighter.  Instead, I decided to write
a small OSX / Linux program which scanned the /dev directory for
serial devices and then would shuffle the data between them as if they
were directly connected.  This had the added benefit of allowing me to
snoop on the communication to help with debugging.

References
==========

[1]: http://www.grandideastudio.com/portfolio/defcon-18-badge/	"DC18 Badge"
[2]: http://en.wikipedia.org/wiki/Web_of_trust			"Web of Trust"
[3]: http://en.wikipedia.org/wiki/Bloom_filter			"Bloom filter"
